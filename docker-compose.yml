version: '3'
services:
  db:
    container_name: db
    hostname: db
    image: postgres:latest
    ports:
      - "54321:5432"
    restart: unless-stopped
    environment:
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env
    volumes:
      - ./postgre/data:/var/lib/postgresql/data
      - ./postgre/init.sql:/docker-entrypoint-initdb.d/init.sql
  web:
    build:
      context: ./web # Chemin vers le répertoire contenant le Dockerfile du conteneur npm
      dockerfile: Dockerfile # Nom du Dockerfile du conteneur npm
    container_name: web
    restart: always
    networks:
      - default
    volumes:
      - ./web/site:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    environment:
      - FAST_REFRESH=true # Active le hot reload de React
    depends_on:
      - db # Spécifie que le conteneur npm dépend du conteneur db (PostgreSQL)
  nest:
    build:
      context: ./nest # Chemin vers le répertoire contenant le Dockerfile du conteneur NestJS
      dockerfile: Dockerfile # Nom du Dockerfile du conteneur NestJS
    container_name: nest
    restart: always
    networks:
      - default
    volumes:
      - ./nest/back:/back # Chemin vers le répertoire contenant le code source de votre application NestJS
    ports:
      - "3001:3001" # Port sur lequel votre application NestJS sera exposée
    environment:
      - FAST_REFRESH=true # Active le hot reload
    depends_on:
      - db # Spécifie que le conteneur NestJS dépend du conteneur db (PostgreSQL)
networks:
  default:
